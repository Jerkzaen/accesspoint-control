        import { SpeedInsights } from "@vercel/speed-insights/next";
        import { Analytics } from "@vercel/analytics/react";
        import type { Metadata } from "next";
        import { Inter as FontSans } from "next/font/google";
        import "./globals.css";
        import { cn } from "@/lib/utils";
        import { ThemeProvider } from "@/components/theme-provider"; // Asegúrate que este NO tenga SessionProvider
        import { Sidebar } from "@/components/sidebar";
        import { Providers } from "./Providers"; // Asegúrate que este NO tenga SessionProvider
        import Header from "@/components/Header"; // Tu componente Header

        const fontSans = FontSans({
          subsets: ["latin"],
          variable: "--font-sans",
        });

        export const metadata: Metadata = {
          title: "AccessPoint Control",
          description: "Generated by create next app",
        };

        export default function RootLayout({
          children,
        }: Readonly<{
          children: React.ReactNode;
        }>) {
          const sidebarWidth = "270px"; // Ancho de tu SidebarDesktop
          const headerHeight = "56px"; // Altura de tu Header (ajusta este valor)

          return (
            <html lang="es" suppressHydrationWarning className="h-full">
              <body
                className={cn(
                  "h-full bg-background font-sans antialiased", // h-full aquí
                  fontSans.variable
                )}
              >
                <Providers> {/* Solo si Providers hace algo más que SessionProvider */}
                  <ThemeProvider
                    attribute="class"
                    defaultTheme="system"
                    enableSystem
                    disableTransitionOnChange
                  >
                    <div className="flex h-full"> {/* Contenedor flex principal */}
                      <Sidebar /> {/* Sidebar es fija y ocupa su propio espacio */}
                      
                      {/* Contenedor para el contenido principal (Header + children) */}
                      {/* Debe tener margen izquierdo para la sidebar */}
                      <div 
                        className="flex-1 flex flex-col overflow-y-auto" 
                        style={{ marginLeft: sidebarWidth }}
                      >
                        <Header /> {/* Header es fijo dentro de esta columna */}
                        
                        {/* El contenido de la página (children) */}
                        {/* Necesita padding superior para el Header y debe poder crecer */}
                        <main 
                          className="flex-grow" 
                          style={{ paddingTop: headerHeight }}
                        >
                          {children}
                        </main>
                      </div>
                    </div>
                  </ThemeProvider>
                </Providers>
                <Analytics />
                <SpeedInsights />
              </body>
            </html>
          );
        }
        