        import { SpeedInsights } from "@vercel/speed-insights/next";
import { Analytics } from "@vercel/analytics/react";
import type { Metadata } from "next";
import { Inter as FontSans } from "next/font/google";
import "./globals.css";
import { cn } from "@/lib/utils";
import { ThemeProvider } from "@/components/theme-provider";
import { Sidebar } from "@/components/sidebar";
import { Providers } from "./Providers"; // Ahora solo envuelve children
import Header from "@/components/Header";

const fontSans = FontSans({
  subsets: ["latin"],
  variable: "--font-sans",
});

export const metadata: Metadata = {
  title: "AccessPoint Control",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const sidebarWidth = "270px"; // Ancho de tu SidebarDesktop
  const headerHeight = "56px"; // Altura de tu Header (ej. h-14 de Tailwind)

  return (
    <html lang="es" suppressHydrationWarning className="h-full">
      <body
        className={cn(
          "h-full bg-background font-sans antialiased overflow-hidden", // overflow-hidden en body para evitar doble scroll
          fontSans.variable
        )}
      >
        <Providers>
          <ThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange
          >
            <div className="flex h-full"> {/* Contenedor flex principal para sidebar y contenido */}
              <Sidebar /> {/* Sidebar es 'fixed', se posiciona independientemente del flujo */}
              
              {/* Contenedor para el área de contenido principal (Header + children) */}
              <div 
                className="flex-1 flex flex-col" // flex-1 para ocupar espacio, flex-col para header y main
                style={{ marginLeft: sidebarWidth }} // Desplaza el contenido a la derecha de la sidebar
              >
                <Header /> {/* Header se renderiza aquí, ocupando su altura definida */}
                
                {/* El 'main' es el contenedor para el contenido de la página (children) */}
                {/* - flex-grow: para ocupar el espacio restante después del Header. */}
                {/* - overflow-y-auto: para permitir scroll si el children es más alto. */}
                <main className="flex-grow overflow-y-auto">
                  {children} {/* page.tsx se renderizará aquí */}
                </main>
              </div>
            </div>
          </ThemeProvider>
        </Providers>
        <Analytics />
        <SpeedInsights />
      </body>
    </html>
  );
}
